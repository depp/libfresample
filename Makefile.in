all:

srcdir := @srcdir@
UNAME_S := @UNAME_S@
ARCHS := @ARCHS@

ifeq ($(UNAME_S),Darwin)
so_ext := dylib
else
so_ext := so
endif

ifeq ($(ARCHS),)

obj/fresample obj/libfresample.a obj/libfresample.$(so_ext):
	$(MAKE) -f $(srcdir)/arch.mak builddir=obj srcdir=$(srcdir) $@

fresample: obj/fresample
	cp $< $@

libfresample.a: obj/libfresample.a
	cp $< $@

libfresample.$(so_ext): obj/libfresample.$(so_ext)
	cp $< $@

else

tool_archs := $(foreach arch,$(ARCHS),obj/$(arch)/fresample)
static_archs := $(foreach arch,$(ARCHS),obj/$(arch)/libfresample.a)
shared_archs := $(foreach arch,$(ARCHS),obj/$(arch)/libfresample.$(so_ext))
bin_archs := $(tool_archs) $(static_archs) $(shared_archs)

$(bin_archs):
	make -f arch.mak builddir=$(patsubst %/,%,$(dir $@)) srcdir=. arch=$(patsubst obj/%/,%,$(dir $@)) $@

fresample: $(tool_archs)
	lipo -create $^ -output $@

libfresample.a: $(static_archs)
	libtool -static $^ -o $@

libfresample.$(so_ext): $(shared_archs)
	lipo -create $^ -output $@

endif

all: fresample libfresample.a libfresample.$(so_ext)

clean:
	rm -f fresample libfresample.a libfresample.$(so_ext)
	rm -rf obj
